// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_message_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_message_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_message_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_2eproto;
class HedgingHint;
class HedgingHintDefaultTypeInternal;
extern HedgingHintDefaultTypeInternal _HedgingHint_default_instance_;
class HoldreleaseHint;
class HoldreleaseHintDefaultTypeInternal;
extern HoldreleaseHintDefaultTypeInternal _HoldreleaseHint_default_instance_;
class ManagementMsg;
class ManagementMsgDefaultTypeInternal;
extern ManagementMsgDefaultTypeInternal _ManagementMsg_default_instance_;
class ManagementMsg_AddrsEntry_DoNotUse;
class ManagementMsg_AddrsEntry_DoNotUseDefaultTypeInternal;
extern ManagementMsg_AddrsEntry_DoNotUseDefaultTypeInternal _ManagementMsg_AddrsEntry_DoNotUse_default_instance_;
class ManagementToDataplane;
class ManagementToDataplaneDefaultTypeInternal;
extern ManagementToDataplaneDefaultTypeInternal _ManagementToDataplane_default_instance_;
class Msg;
class MsgDefaultTypeInternal;
extern MsgDefaultTypeInternal _Msg_default_instance_;
class StartOrdersSubmission;
class StartOrdersSubmissionDefaultTypeInternal;
extern StartOrdersSubmissionDefaultTypeInternal _StartOrdersSubmission_default_instance_;
class Stats;
class StatsDefaultTypeInternal;
extern StatsDefaultTypeInternal _Stats_default_instance_;
class StatsFields;
class StatsFieldsDefaultTypeInternal;
extern StatsFieldsDefaultTypeInternal _StatsFields_default_instance_;
class Stats_RecordsEntry_DoNotUse;
class Stats_RecordsEntry_DoNotUseDefaultTypeInternal;
extern Stats_RecordsEntry_DoNotUseDefaultTypeInternal _Stats_RecordsEntry_DoNotUse_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::HedgingHint* Arena::CreateMaybeMessage<::HedgingHint>(Arena*);
template<> ::HoldreleaseHint* Arena::CreateMaybeMessage<::HoldreleaseHint>(Arena*);
template<> ::ManagementMsg* Arena::CreateMaybeMessage<::ManagementMsg>(Arena*);
template<> ::ManagementMsg_AddrsEntry_DoNotUse* Arena::CreateMaybeMessage<::ManagementMsg_AddrsEntry_DoNotUse>(Arena*);
template<> ::ManagementToDataplane* Arena::CreateMaybeMessage<::ManagementToDataplane>(Arena*);
template<> ::Msg* Arena::CreateMaybeMessage<::Msg>(Arena*);
template<> ::StartOrdersSubmission* Arena::CreateMaybeMessage<::StartOrdersSubmission>(Arena*);
template<> ::Stats* Arena::CreateMaybeMessage<::Stats>(Arena*);
template<> ::StatsFields* Arena::CreateMaybeMessage<::StatsFields>(Arena*);
template<> ::Stats_RecordsEntry_DoNotUse* Arena::CreateMaybeMessage<::Stats_RecordsEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum MessageType : int {
  REQ_UNKNOWN = 0,
  ACK_UNKNOWN = 1,
  REQ_MAC_COLLECTION = 2,
  ACK_MAC_COLLECTION = 3,
  REQ_MAC_ADDRESS = 4,
  ACK_MAC_ADDRESS = 5,
  REQ_STATS_COLLECTION = 6,
  ACK_STATS_COLLECTION = 7,
  REQ_ACK_MAC_COLLECTION = 8,
  START_ORDERS_SUBMISSION = 9,
  ACK_START_ORDERS_SUBMISSION = 10,
  REQ_MAC_COLLECTION_STATUS = 11,
  ACK_MAC_COLLECTION_STATUS = 12,
  NACK_MAC_COLLECTION_STATUS = 13,
  MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MessageType_IsValid(int value);
constexpr MessageType MessageType_MIN = REQ_UNKNOWN;
constexpr MessageType MessageType_MAX = NACK_MAC_COLLECTION_STATUS;
constexpr int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageType_descriptor();
template<typename T>
inline const std::string& MessageType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MessageType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MessageType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MessageType_descriptor(), enum_t_value);
}
inline bool MessageType_Parse(
    const std::string& name, MessageType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class Msg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Msg) */ {
 public:
  inline Msg() : Msg(nullptr) {};
  virtual ~Msg();

  Msg(const Msg& from);
  Msg(Msg&& from) noexcept
    : Msg() {
    *this = ::std::move(from);
  }

  inline Msg& operator=(const Msg& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg& operator=(Msg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Msg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg* internal_default_instance() {
    return reinterpret_cast<const Msg*>(
               &_Msg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Msg& a, Msg& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg* New() const final {
    return CreateMaybeMessage<Msg>(nullptr);
  }

  Msg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Msg& from);
  void MergeFrom(const Msg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Msg";
  }
  protected:
  explicit Msg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgIdFieldNumber = 1,
    kClientSendTimeFieldNumber = 2,
    kRootSendTimeFieldNumber = 4,
    kRecipientIdFieldNumber = 3,
    kMsgTypeFieldNumber = 5,
    kExperimentStartingMsgIdFieldNumber = 7,
    kDeadlineFieldNumber = 8,
    kDownstreamFieldNumber = 9,
    kIsFromHedgeNodeFieldNumber = 6,
  };
  // int64 msg_id = 1;
  void clear_msg_id();
  ::PROTOBUF_NAMESPACE_ID::int64 msg_id() const;
  void set_msg_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_msg_id() const;
  void _internal_set_msg_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 client_send_time = 2;
  void clear_client_send_time();
  ::PROTOBUF_NAMESPACE_ID::int64 client_send_time() const;
  void set_client_send_time(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_client_send_time() const;
  void _internal_set_client_send_time(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 root_send_time = 4;
  void clear_root_send_time();
  ::PROTOBUF_NAMESPACE_ID::int64 root_send_time() const;
  void set_root_send_time(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_root_send_time() const;
  void _internal_set_root_send_time(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 recipient_id = 3;
  void clear_recipient_id();
  ::PROTOBUF_NAMESPACE_ID::int32 recipient_id() const;
  void set_recipient_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_recipient_id() const;
  void _internal_set_recipient_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 msg_type = 5;
  void clear_msg_type();
  ::PROTOBUF_NAMESPACE_ID::int32 msg_type() const;
  void set_msg_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_msg_type() const;
  void _internal_set_msg_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 experiment_starting_msg_id = 7;
  void clear_experiment_starting_msg_id();
  ::PROTOBUF_NAMESPACE_ID::int64 experiment_starting_msg_id() const;
  void set_experiment_starting_msg_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_experiment_starting_msg_id() const;
  void _internal_set_experiment_starting_msg_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 deadline = 8;
  void clear_deadline();
  ::PROTOBUF_NAMESPACE_ID::int64 deadline() const;
  void set_deadline(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_deadline() const;
  void _internal_set_deadline(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 downstream = 9;
  void clear_downstream();
  ::PROTOBUF_NAMESPACE_ID::int64 downstream() const;
  void set_downstream(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_downstream() const;
  void _internal_set_downstream(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 is_from_hedge_node = 6;
  void clear_is_from_hedge_node();
  ::PROTOBUF_NAMESPACE_ID::int32 is_from_hedge_node() const;
  void set_is_from_hedge_node(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_from_hedge_node() const;
  void _internal_set_is_from_hedge_node(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Msg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 msg_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 client_send_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 root_send_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 recipient_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 msg_type_;
  ::PROTOBUF_NAMESPACE_ID::int64 experiment_starting_msg_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 deadline_;
  ::PROTOBUF_NAMESPACE_ID::int64 downstream_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_from_hedge_node_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class StatsFields PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:StatsFields) */ {
 public:
  inline StatsFields() : StatsFields(nullptr) {};
  virtual ~StatsFields();

  StatsFields(const StatsFields& from);
  StatsFields(StatsFields&& from) noexcept
    : StatsFields() {
    *this = ::std::move(from);
  }

  inline StatsFields& operator=(const StatsFields& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatsFields& operator=(StatsFields&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StatsFields& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StatsFields* internal_default_instance() {
    return reinterpret_cast<const StatsFields*>(
               &_StatsFields_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(StatsFields& a, StatsFields& b) {
    a.Swap(&b);
  }
  inline void Swap(StatsFields* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatsFields* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StatsFields* New() const final {
    return CreateMaybeMessage<StatsFields>(nullptr);
  }

  StatsFields* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StatsFields>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StatsFields& from);
  void MergeFrom(const StatsFields& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatsFields* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "StatsFields";
  }
  protected:
  explicit StatsFields(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLatencyFieldNumber = 1,
    kReleaseTimeFieldNumber = 2,
    kDeadlineFieldNumber = 4,
    kHoldingDurationFieldNumber = 3,
  };
  // int64 latency = 1;
  void clear_latency();
  ::PROTOBUF_NAMESPACE_ID::int64 latency() const;
  void set_latency(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_latency() const;
  void _internal_set_latency(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 release_time = 2;
  void clear_release_time();
  ::PROTOBUF_NAMESPACE_ID::int64 release_time() const;
  void set_release_time(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_release_time() const;
  void _internal_set_release_time(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 deadline = 4;
  void clear_deadline();
  ::PROTOBUF_NAMESPACE_ID::int64 deadline() const;
  void set_deadline(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_deadline() const;
  void _internal_set_deadline(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 holding_duration = 3;
  void clear_holding_duration();
  ::PROTOBUF_NAMESPACE_ID::int32 holding_duration() const;
  void set_holding_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_holding_duration() const;
  void _internal_set_holding_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:StatsFields)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 latency_;
  ::PROTOBUF_NAMESPACE_ID::int64 release_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 deadline_;
  ::PROTOBUF_NAMESPACE_ID::int32 holding_duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class Stats_RecordsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Stats_RecordsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::StatsFields,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Stats_RecordsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int64, ::StatsFields,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Stats_RecordsEntry_DoNotUse();
  Stats_RecordsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Stats_RecordsEntry_DoNotUse& other);
  static const Stats_RecordsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Stats_RecordsEntry_DoNotUse*>(&_Stats_RecordsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class Stats PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Stats) */ {
 public:
  inline Stats() : Stats(nullptr) {};
  virtual ~Stats();

  Stats(const Stats& from);
  Stats(Stats&& from) noexcept
    : Stats() {
    *this = ::std::move(from);
  }

  inline Stats& operator=(const Stats& from) {
    CopyFrom(from);
    return *this;
  }
  inline Stats& operator=(Stats&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Stats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stats* internal_default_instance() {
    return reinterpret_cast<const Stats*>(
               &_Stats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Stats& a, Stats& b) {
    a.Swap(&b);
  }
  inline void Swap(Stats* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Stats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Stats* New() const final {
    return CreateMaybeMessage<Stats>(nullptr);
  }

  Stats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Stats>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Stats& from);
  void MergeFrom(const Stats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Stats* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Stats";
  }
  protected:
  explicit Stats(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kRecordsFieldNumber = 2,
    kTotalMsgsFieldNumber = 3,
    kRecipientIdFieldNumber = 1,
  };
  // map<int64, .StatsFields> records = 2;
  int records_size() const;
  private:
  int _internal_records_size() const;
  public:
  void clear_records();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::StatsFields >&
      _internal_records() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::StatsFields >*
      _internal_mutable_records();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::StatsFields >&
      records() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::StatsFields >*
      mutable_records();

  // int64 total_msgs = 3;
  void clear_total_msgs();
  ::PROTOBUF_NAMESPACE_ID::int64 total_msgs() const;
  void set_total_msgs(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_total_msgs() const;
  void _internal_set_total_msgs(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 recipient_id = 1;
  void clear_recipient_id();
  ::PROTOBUF_NAMESPACE_ID::int32 recipient_id() const;
  void set_recipient_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_recipient_id() const;
  void _internal_set_recipient_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Stats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Stats_RecordsEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int64, ::StatsFields,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > records_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_msgs_;
  ::PROTOBUF_NAMESPACE_ID::int32 recipient_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class ManagementMsg_AddrsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ManagementMsg_AddrsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ManagementMsg_AddrsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ManagementMsg_AddrsEntry_DoNotUse();
  ManagementMsg_AddrsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ManagementMsg_AddrsEntry_DoNotUse& other);
  static const ManagementMsg_AddrsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ManagementMsg_AddrsEntry_DoNotUse*>(&_ManagementMsg_AddrsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "ManagementMsg.AddrsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "ManagementMsg.AddrsEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[4];
  }

  public:
};

// -------------------------------------------------------------------

class ManagementMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ManagementMsg) */ {
 public:
  inline ManagementMsg() : ManagementMsg(nullptr) {};
  virtual ~ManagementMsg();

  ManagementMsg(const ManagementMsg& from);
  ManagementMsg(ManagementMsg&& from) noexcept
    : ManagementMsg() {
    *this = ::std::move(from);
  }

  inline ManagementMsg& operator=(const ManagementMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManagementMsg& operator=(ManagementMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ManagementMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManagementMsg* internal_default_instance() {
    return reinterpret_cast<const ManagementMsg*>(
               &_ManagementMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ManagementMsg& a, ManagementMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(ManagementMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManagementMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ManagementMsg* New() const final {
    return CreateMaybeMessage<ManagementMsg>(nullptr);
  }

  ManagementMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ManagementMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ManagementMsg& from);
  void MergeFrom(const ManagementMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManagementMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ManagementMsg";
  }
  protected:
  explicit ManagementMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kAddrsFieldNumber = 3,
    kRequestFieldNumber = 6,
    kMacAddressFieldNumber = 1,
    kIpAddressFieldNumber = 2,
    kDataFieldNumber = 7,
    kOrderSubReqFieldNumber = 8,
    kMsgTypeFieldNumber = 4,
    kStopFieldNumber = 5,
  };
  // map<string, string> addrs = 3;
  int addrs_size() const;
  private:
  int _internal_addrs_size() const;
  public:
  void clear_addrs();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_addrs() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_addrs();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      addrs() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_addrs();

  // repeated string request = 6;
  int request_size() const;
  private:
  int _internal_request_size() const;
  public:
  void clear_request();
  const std::string& request(int index) const;
  std::string* mutable_request(int index);
  void set_request(int index, const std::string& value);
  void set_request(int index, std::string&& value);
  void set_request(int index, const char* value);
  void set_request(int index, const char* value, size_t size);
  std::string* add_request();
  void add_request(const std::string& value);
  void add_request(std::string&& value);
  void add_request(const char* value);
  void add_request(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& request() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_request();
  private:
  const std::string& _internal_request(int index) const;
  std::string* _internal_add_request();
  public:

  // string mac_address = 1;
  void clear_mac_address();
  const std::string& mac_address() const;
  void set_mac_address(const std::string& value);
  void set_mac_address(std::string&& value);
  void set_mac_address(const char* value);
  void set_mac_address(const char* value, size_t size);
  std::string* mutable_mac_address();
  std::string* release_mac_address();
  void set_allocated_mac_address(std::string* mac_address);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_mac_address();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_mac_address(
      std::string* mac_address);
  private:
  const std::string& _internal_mac_address() const;
  void _internal_set_mac_address(const std::string& value);
  std::string* _internal_mutable_mac_address();
  public:

  // string ip_address = 2;
  void clear_ip_address();
  const std::string& ip_address() const;
  void set_ip_address(const std::string& value);
  void set_ip_address(std::string&& value);
  void set_ip_address(const char* value);
  void set_ip_address(const char* value, size_t size);
  std::string* mutable_ip_address();
  std::string* release_ip_address();
  void set_allocated_ip_address(std::string* ip_address);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_ip_address();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ip_address(
      std::string* ip_address);
  private:
  const std::string& _internal_ip_address() const;
  void _internal_set_ip_address(const std::string& value);
  std::string* _internal_mutable_ip_address();
  public:

  // string data = 7;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_data();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_data(
      std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // .StartOrdersSubmission order_sub_req = 8;
  bool has_order_sub_req() const;
  private:
  bool _internal_has_order_sub_req() const;
  public:
  void clear_order_sub_req();
  const ::StartOrdersSubmission& order_sub_req() const;
  ::StartOrdersSubmission* release_order_sub_req();
  ::StartOrdersSubmission* mutable_order_sub_req();
  void set_allocated_order_sub_req(::StartOrdersSubmission* order_sub_req);
  private:
  const ::StartOrdersSubmission& _internal_order_sub_req() const;
  ::StartOrdersSubmission* _internal_mutable_order_sub_req();
  public:
  void unsafe_arena_set_allocated_order_sub_req(
      ::StartOrdersSubmission* order_sub_req);
  ::StartOrdersSubmission* unsafe_arena_release_order_sub_req();

  // int32 msg_type = 4;
  void clear_msg_type();
  ::PROTOBUF_NAMESPACE_ID::int32 msg_type() const;
  void set_msg_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_msg_type() const;
  void _internal_set_msg_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool stop = 5;
  void clear_stop();
  bool stop() const;
  void set_stop(bool value);
  private:
  bool _internal_stop() const;
  void _internal_set_stop(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ManagementMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      ManagementMsg_AddrsEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      0 > addrs_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> request_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mac_address_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ip_address_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  ::StartOrdersSubmission* order_sub_req_;
  ::PROTOBUF_NAMESPACE_ID::int32 msg_type_;
  bool stop_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class HedgingHint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HedgingHint) */ {
 public:
  inline HedgingHint() : HedgingHint(nullptr) {};
  virtual ~HedgingHint();

  HedgingHint(const HedgingHint& from);
  HedgingHint(HedgingHint&& from) noexcept
    : HedgingHint() {
    *this = ::std::move(from);
  }

  inline HedgingHint& operator=(const HedgingHint& from) {
    CopyFrom(from);
    return *this;
  }
  inline HedgingHint& operator=(HedgingHint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HedgingHint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HedgingHint* internal_default_instance() {
    return reinterpret_cast<const HedgingHint*>(
               &_HedgingHint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(HedgingHint& a, HedgingHint& b) {
    a.Swap(&b);
  }
  inline void Swap(HedgingHint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HedgingHint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HedgingHint* New() const final {
    return CreateMaybeMessage<HedgingHint>(nullptr);
  }

  HedgingHint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HedgingHint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HedgingHint& from);
  void MergeFrom(const HedgingHint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HedgingHint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HedgingHint";
  }
  protected:
  explicit HedgingHint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProxyNumFieldNumber = 1,
    kIntensityFieldNumber = 2,
  };
  // int32 proxy_num = 1;
  void clear_proxy_num();
  ::PROTOBUF_NAMESPACE_ID::int32 proxy_num() const;
  void set_proxy_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_proxy_num() const;
  void _internal_set_proxy_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float intensity = 2;
  void clear_intensity();
  float intensity() const;
  void set_intensity(float value);
  private:
  float _internal_intensity() const;
  void _internal_set_intensity(float value);
  public:

  // @@protoc_insertion_point(class_scope:HedgingHint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 proxy_num_;
  float intensity_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class HoldreleaseHint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HoldreleaseHint) */ {
 public:
  inline HoldreleaseHint() : HoldreleaseHint(nullptr) {};
  virtual ~HoldreleaseHint();

  HoldreleaseHint(const HoldreleaseHint& from);
  HoldreleaseHint(HoldreleaseHint&& from) noexcept
    : HoldreleaseHint() {
    *this = ::std::move(from);
  }

  inline HoldreleaseHint& operator=(const HoldreleaseHint& from) {
    CopyFrom(from);
    return *this;
  }
  inline HoldreleaseHint& operator=(HoldreleaseHint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HoldreleaseHint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HoldreleaseHint* internal_default_instance() {
    return reinterpret_cast<const HoldreleaseHint*>(
               &_HoldreleaseHint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(HoldreleaseHint& a, HoldreleaseHint& b) {
    a.Swap(&b);
  }
  inline void Swap(HoldreleaseHint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HoldreleaseHint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HoldreleaseHint* New() const final {
    return CreateMaybeMessage<HoldreleaseHint>(nullptr);
  }

  HoldreleaseHint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HoldreleaseHint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HoldreleaseHint& from);
  void MergeFrom(const HoldreleaseHint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HoldreleaseHint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HoldreleaseHint";
  }
  protected:
  explicit HoldreleaseHint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOwdEstimatesFieldNumber = 2,
    kIndexFieldNumber = 1,
  };
  // repeated int32 owd_estimates = 2;
  int owd_estimates_size() const;
  private:
  int _internal_owd_estimates_size() const;
  public:
  void clear_owd_estimates();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_owd_estimates(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_owd_estimates() const;
  void _internal_add_owd_estimates(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_owd_estimates();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 owd_estimates(int index) const;
  void set_owd_estimates(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_owd_estimates(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      owd_estimates() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_owd_estimates();

  // int32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:HoldreleaseHint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > owd_estimates_;
  mutable std::atomic<int> _owd_estimates_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class StartOrdersSubmission PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:StartOrdersSubmission) */ {
 public:
  inline StartOrdersSubmission() : StartOrdersSubmission(nullptr) {};
  virtual ~StartOrdersSubmission();

  StartOrdersSubmission(const StartOrdersSubmission& from);
  StartOrdersSubmission(StartOrdersSubmission&& from) noexcept
    : StartOrdersSubmission() {
    *this = ::std::move(from);
  }

  inline StartOrdersSubmission& operator=(const StartOrdersSubmission& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartOrdersSubmission& operator=(StartOrdersSubmission&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StartOrdersSubmission& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartOrdersSubmission* internal_default_instance() {
    return reinterpret_cast<const StartOrdersSubmission*>(
               &_StartOrdersSubmission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(StartOrdersSubmission& a, StartOrdersSubmission& b) {
    a.Swap(&b);
  }
  inline void Swap(StartOrdersSubmission* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartOrdersSubmission* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StartOrdersSubmission* New() const final {
    return CreateMaybeMessage<StartOrdersSubmission>(nullptr);
  }

  StartOrdersSubmission* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StartOrdersSubmission>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StartOrdersSubmission& from);
  void MergeFrom(const StartOrdersSubmission& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartOrdersSubmission* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "StartOrdersSubmission";
  }
  protected:
  explicit StartOrdersSubmission(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestIdFieldNumber = 1,
    kRateFieldNumber = 2,
    kExperimentDurationFieldNumber = 3,
    kStartTimestampFieldNumber = 4,
    kBidRangeStartFieldNumber = 5,
    kBidRangeEndFieldNumber = 6,
    kAskRangeStartFieldNumber = 7,
    kAskRangeEndFieldNumber = 8,
    kFixedInterarrivalFieldNumber = 9,
    kUseFancypqFieldNumber = 10,
  };
  // uint64 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 rate = 2;
  void clear_rate();
  ::PROTOBUF_NAMESPACE_ID::int32 rate() const;
  void set_rate(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rate() const;
  void _internal_set_rate(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 experiment_duration = 3;
  void clear_experiment_duration();
  ::PROTOBUF_NAMESPACE_ID::int32 experiment_duration() const;
  void set_experiment_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_experiment_duration() const;
  void _internal_set_experiment_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 start_timestamp = 4;
  void clear_start_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 start_timestamp() const;
  void set_start_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_start_timestamp() const;
  void _internal_set_start_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 bid_range_start = 5;
  void clear_bid_range_start();
  ::PROTOBUF_NAMESPACE_ID::int32 bid_range_start() const;
  void set_bid_range_start(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bid_range_start() const;
  void _internal_set_bid_range_start(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bid_range_end = 6;
  void clear_bid_range_end();
  ::PROTOBUF_NAMESPACE_ID::int32 bid_range_end() const;
  void set_bid_range_end(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bid_range_end() const;
  void _internal_set_bid_range_end(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ask_range_start = 7;
  void clear_ask_range_start();
  ::PROTOBUF_NAMESPACE_ID::int32 ask_range_start() const;
  void set_ask_range_start(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ask_range_start() const;
  void _internal_set_ask_range_start(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ask_range_end = 8;
  void clear_ask_range_end();
  ::PROTOBUF_NAMESPACE_ID::int32 ask_range_end() const;
  void set_ask_range_end(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ask_range_end() const;
  void _internal_set_ask_range_end(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 fixed_interarrival = 9;
  void clear_fixed_interarrival();
  ::PROTOBUF_NAMESPACE_ID::int32 fixed_interarrival() const;
  void set_fixed_interarrival(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fixed_interarrival() const;
  void _internal_set_fixed_interarrival(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool use_fancypq = 10;
  void clear_use_fancypq();
  bool use_fancypq() const;
  void set_use_fancypq(bool value);
  private:
  bool _internal_use_fancypq() const;
  void _internal_set_use_fancypq(bool value);
  public:

  // @@protoc_insertion_point(class_scope:StartOrdersSubmission)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 rate_;
  ::PROTOBUF_NAMESPACE_ID::int32 experiment_duration_;
  ::PROTOBUF_NAMESPACE_ID::uint64 start_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 bid_range_start_;
  ::PROTOBUF_NAMESPACE_ID::int32 bid_range_end_;
  ::PROTOBUF_NAMESPACE_ID::int32 ask_range_start_;
  ::PROTOBUF_NAMESPACE_ID::int32 ask_range_end_;
  ::PROTOBUF_NAMESPACE_ID::int32 fixed_interarrival_;
  bool use_fancypq_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class ManagementToDataplane PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ManagementToDataplane) */ {
 public:
  inline ManagementToDataplane() : ManagementToDataplane(nullptr) {};
  virtual ~ManagementToDataplane();

  ManagementToDataplane(const ManagementToDataplane& from);
  ManagementToDataplane(ManagementToDataplane&& from) noexcept
    : ManagementToDataplane() {
    *this = ::std::move(from);
  }

  inline ManagementToDataplane& operator=(const ManagementToDataplane& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManagementToDataplane& operator=(ManagementToDataplane&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ManagementToDataplane& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManagementToDataplane* internal_default_instance() {
    return reinterpret_cast<const ManagementToDataplane*>(
               &_ManagementToDataplane_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ManagementToDataplane& a, ManagementToDataplane& b) {
    a.Swap(&b);
  }
  inline void Swap(ManagementToDataplane* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManagementToDataplane* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ManagementToDataplane* New() const final {
    return CreateMaybeMessage<ManagementToDataplane>(nullptr);
  }

  ManagementToDataplane* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ManagementToDataplane>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ManagementToDataplane& from);
  void MergeFrom(const ManagementToDataplane& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManagementToDataplane* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ManagementToDataplane";
  }
  protected:
  explicit ManagementToDataplane(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderSubReqFieldNumber = 1,
  };
  // .StartOrdersSubmission order_sub_req = 1;
  bool has_order_sub_req() const;
  private:
  bool _internal_has_order_sub_req() const;
  public:
  void clear_order_sub_req();
  const ::StartOrdersSubmission& order_sub_req() const;
  ::StartOrdersSubmission* release_order_sub_req();
  ::StartOrdersSubmission* mutable_order_sub_req();
  void set_allocated_order_sub_req(::StartOrdersSubmission* order_sub_req);
  private:
  const ::StartOrdersSubmission& _internal_order_sub_req() const;
  ::StartOrdersSubmission* _internal_mutable_order_sub_req();
  public:
  void unsafe_arena_set_allocated_order_sub_req(
      ::StartOrdersSubmission* order_sub_req);
  ::StartOrdersSubmission* unsafe_arena_release_order_sub_req();

  // @@protoc_insertion_point(class_scope:ManagementToDataplane)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::StartOrdersSubmission* order_sub_req_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Msg

// int64 msg_id = 1;
inline void Msg::clear_msg_id() {
  msg_id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_msg_id() const {
  return msg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::msg_id() const {
  // @@protoc_insertion_point(field_get:Msg.msg_id)
  return _internal_msg_id();
}
inline void Msg::_internal_set_msg_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  msg_id_ = value;
}
inline void Msg::set_msg_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:Msg.msg_id)
}

// int64 client_send_time = 2;
inline void Msg::clear_client_send_time() {
  client_send_time_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_client_send_time() const {
  return client_send_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::client_send_time() const {
  // @@protoc_insertion_point(field_get:Msg.client_send_time)
  return _internal_client_send_time();
}
inline void Msg::_internal_set_client_send_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  client_send_time_ = value;
}
inline void Msg::set_client_send_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_client_send_time(value);
  // @@protoc_insertion_point(field_set:Msg.client_send_time)
}

// int32 recipient_id = 3;
inline void Msg::clear_recipient_id() {
  recipient_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_recipient_id() const {
  return recipient_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::recipient_id() const {
  // @@protoc_insertion_point(field_get:Msg.recipient_id)
  return _internal_recipient_id();
}
inline void Msg::_internal_set_recipient_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  recipient_id_ = value;
}
inline void Msg::set_recipient_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_recipient_id(value);
  // @@protoc_insertion_point(field_set:Msg.recipient_id)
}

// int64 root_send_time = 4;
inline void Msg::clear_root_send_time() {
  root_send_time_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_root_send_time() const {
  return root_send_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::root_send_time() const {
  // @@protoc_insertion_point(field_get:Msg.root_send_time)
  return _internal_root_send_time();
}
inline void Msg::_internal_set_root_send_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  root_send_time_ = value;
}
inline void Msg::set_root_send_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_root_send_time(value);
  // @@protoc_insertion_point(field_set:Msg.root_send_time)
}

// int32 msg_type = 5;
inline void Msg::clear_msg_type() {
  msg_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_msg_type() const {
  return msg_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::msg_type() const {
  // @@protoc_insertion_point(field_get:Msg.msg_type)
  return _internal_msg_type();
}
inline void Msg::_internal_set_msg_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  msg_type_ = value;
}
inline void Msg::set_msg_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_msg_type(value);
  // @@protoc_insertion_point(field_set:Msg.msg_type)
}

// int32 is_from_hedge_node = 6;
inline void Msg::clear_is_from_hedge_node() {
  is_from_hedge_node_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_is_from_hedge_node() const {
  return is_from_hedge_node_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::is_from_hedge_node() const {
  // @@protoc_insertion_point(field_get:Msg.is_from_hedge_node)
  return _internal_is_from_hedge_node();
}
inline void Msg::_internal_set_is_from_hedge_node(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_from_hedge_node_ = value;
}
inline void Msg::set_is_from_hedge_node(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_from_hedge_node(value);
  // @@protoc_insertion_point(field_set:Msg.is_from_hedge_node)
}

// int64 experiment_starting_msg_id = 7;
inline void Msg::clear_experiment_starting_msg_id() {
  experiment_starting_msg_id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_experiment_starting_msg_id() const {
  return experiment_starting_msg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::experiment_starting_msg_id() const {
  // @@protoc_insertion_point(field_get:Msg.experiment_starting_msg_id)
  return _internal_experiment_starting_msg_id();
}
inline void Msg::_internal_set_experiment_starting_msg_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  experiment_starting_msg_id_ = value;
}
inline void Msg::set_experiment_starting_msg_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_experiment_starting_msg_id(value);
  // @@protoc_insertion_point(field_set:Msg.experiment_starting_msg_id)
}

// int64 deadline = 8;
inline void Msg::clear_deadline() {
  deadline_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_deadline() const {
  return deadline_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::deadline() const {
  // @@protoc_insertion_point(field_get:Msg.deadline)
  return _internal_deadline();
}
inline void Msg::_internal_set_deadline(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  deadline_ = value;
}
inline void Msg::set_deadline(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_deadline(value);
  // @@protoc_insertion_point(field_set:Msg.deadline)
}

// int64 downstream = 9;
inline void Msg::clear_downstream() {
  downstream_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_downstream() const {
  return downstream_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::downstream() const {
  // @@protoc_insertion_point(field_get:Msg.downstream)
  return _internal_downstream();
}
inline void Msg::_internal_set_downstream(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  downstream_ = value;
}
inline void Msg::set_downstream(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_downstream(value);
  // @@protoc_insertion_point(field_set:Msg.downstream)
}

// -------------------------------------------------------------------

// StatsFields

// int64 latency = 1;
inline void StatsFields::clear_latency() {
  latency_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StatsFields::_internal_latency() const {
  return latency_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StatsFields::latency() const {
  // @@protoc_insertion_point(field_get:StatsFields.latency)
  return _internal_latency();
}
inline void StatsFields::_internal_set_latency(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  latency_ = value;
}
inline void StatsFields::set_latency(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_latency(value);
  // @@protoc_insertion_point(field_set:StatsFields.latency)
}

// int64 release_time = 2;
inline void StatsFields::clear_release_time() {
  release_time_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StatsFields::_internal_release_time() const {
  return release_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StatsFields::release_time() const {
  // @@protoc_insertion_point(field_get:StatsFields.release_time)
  return _internal_release_time();
}
inline void StatsFields::_internal_set_release_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  release_time_ = value;
}
inline void StatsFields::set_release_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_release_time(value);
  // @@protoc_insertion_point(field_set:StatsFields.release_time)
}

// int32 holding_duration = 3;
inline void StatsFields::clear_holding_duration() {
  holding_duration_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StatsFields::_internal_holding_duration() const {
  return holding_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StatsFields::holding_duration() const {
  // @@protoc_insertion_point(field_get:StatsFields.holding_duration)
  return _internal_holding_duration();
}
inline void StatsFields::_internal_set_holding_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  holding_duration_ = value;
}
inline void StatsFields::set_holding_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_holding_duration(value);
  // @@protoc_insertion_point(field_set:StatsFields.holding_duration)
}

// int64 deadline = 4;
inline void StatsFields::clear_deadline() {
  deadline_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StatsFields::_internal_deadline() const {
  return deadline_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StatsFields::deadline() const {
  // @@protoc_insertion_point(field_get:StatsFields.deadline)
  return _internal_deadline();
}
inline void StatsFields::_internal_set_deadline(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  deadline_ = value;
}
inline void StatsFields::set_deadline(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_deadline(value);
  // @@protoc_insertion_point(field_set:StatsFields.deadline)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Stats

// int32 recipient_id = 1;
inline void Stats::clear_recipient_id() {
  recipient_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Stats::_internal_recipient_id() const {
  return recipient_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Stats::recipient_id() const {
  // @@protoc_insertion_point(field_get:Stats.recipient_id)
  return _internal_recipient_id();
}
inline void Stats::_internal_set_recipient_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  recipient_id_ = value;
}
inline void Stats::set_recipient_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_recipient_id(value);
  // @@protoc_insertion_point(field_set:Stats.recipient_id)
}

// map<int64, .StatsFields> records = 2;
inline int Stats::_internal_records_size() const {
  return records_.size();
}
inline int Stats::records_size() const {
  return _internal_records_size();
}
inline void Stats::clear_records() {
  records_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::StatsFields >&
Stats::_internal_records() const {
  return records_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::StatsFields >&
Stats::records() const {
  // @@protoc_insertion_point(field_map:Stats.records)
  return _internal_records();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::StatsFields >*
Stats::_internal_mutable_records() {
  return records_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::StatsFields >*
Stats::mutable_records() {
  // @@protoc_insertion_point(field_mutable_map:Stats.records)
  return _internal_mutable_records();
}

// int64 total_msgs = 3;
inline void Stats::clear_total_msgs() {
  total_msgs_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Stats::_internal_total_msgs() const {
  return total_msgs_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Stats::total_msgs() const {
  // @@protoc_insertion_point(field_get:Stats.total_msgs)
  return _internal_total_msgs();
}
inline void Stats::_internal_set_total_msgs(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  total_msgs_ = value;
}
inline void Stats::set_total_msgs(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_total_msgs(value);
  // @@protoc_insertion_point(field_set:Stats.total_msgs)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ManagementMsg

// string mac_address = 1;
inline void ManagementMsg::clear_mac_address() {
  mac_address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ManagementMsg::mac_address() const {
  // @@protoc_insertion_point(field_get:ManagementMsg.mac_address)
  return _internal_mac_address();
}
inline void ManagementMsg::set_mac_address(const std::string& value) {
  _internal_set_mac_address(value);
  // @@protoc_insertion_point(field_set:ManagementMsg.mac_address)
}
inline std::string* ManagementMsg::mutable_mac_address() {
  // @@protoc_insertion_point(field_mutable:ManagementMsg.mac_address)
  return _internal_mutable_mac_address();
}
inline const std::string& ManagementMsg::_internal_mac_address() const {
  return mac_address_.Get();
}
inline void ManagementMsg::_internal_set_mac_address(const std::string& value) {
  
  mac_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ManagementMsg::set_mac_address(std::string&& value) {
  
  mac_address_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ManagementMsg.mac_address)
}
inline void ManagementMsg::set_mac_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mac_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ManagementMsg.mac_address)
}
inline void ManagementMsg::set_mac_address(const char* value,
    size_t size) {
  
  mac_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ManagementMsg.mac_address)
}
inline std::string* ManagementMsg::_internal_mutable_mac_address() {
  
  return mac_address_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ManagementMsg::release_mac_address() {
  // @@protoc_insertion_point(field_release:ManagementMsg.mac_address)
  return mac_address_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ManagementMsg::set_allocated_mac_address(std::string* mac_address) {
  if (mac_address != nullptr) {
    
  } else {
    
  }
  mac_address_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mac_address,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ManagementMsg.mac_address)
}
inline std::string* ManagementMsg::unsafe_arena_release_mac_address() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManagementMsg.mac_address)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return mac_address_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ManagementMsg::unsafe_arena_set_allocated_mac_address(
    std::string* mac_address) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (mac_address != nullptr) {
    
  } else {
    
  }
  mac_address_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      mac_address, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManagementMsg.mac_address)
}

// string ip_address = 2;
inline void ManagementMsg::clear_ip_address() {
  ip_address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ManagementMsg::ip_address() const {
  // @@protoc_insertion_point(field_get:ManagementMsg.ip_address)
  return _internal_ip_address();
}
inline void ManagementMsg::set_ip_address(const std::string& value) {
  _internal_set_ip_address(value);
  // @@protoc_insertion_point(field_set:ManagementMsg.ip_address)
}
inline std::string* ManagementMsg::mutable_ip_address() {
  // @@protoc_insertion_point(field_mutable:ManagementMsg.ip_address)
  return _internal_mutable_ip_address();
}
inline const std::string& ManagementMsg::_internal_ip_address() const {
  return ip_address_.Get();
}
inline void ManagementMsg::_internal_set_ip_address(const std::string& value) {
  
  ip_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ManagementMsg::set_ip_address(std::string&& value) {
  
  ip_address_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ManagementMsg.ip_address)
}
inline void ManagementMsg::set_ip_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ManagementMsg.ip_address)
}
inline void ManagementMsg::set_ip_address(const char* value,
    size_t size) {
  
  ip_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ManagementMsg.ip_address)
}
inline std::string* ManagementMsg::_internal_mutable_ip_address() {
  
  return ip_address_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ManagementMsg::release_ip_address() {
  // @@protoc_insertion_point(field_release:ManagementMsg.ip_address)
  return ip_address_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ManagementMsg::set_allocated_ip_address(std::string* ip_address) {
  if (ip_address != nullptr) {
    
  } else {
    
  }
  ip_address_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ip_address,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ManagementMsg.ip_address)
}
inline std::string* ManagementMsg::unsafe_arena_release_ip_address() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManagementMsg.ip_address)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return ip_address_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ManagementMsg::unsafe_arena_set_allocated_ip_address(
    std::string* ip_address) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (ip_address != nullptr) {
    
  } else {
    
  }
  ip_address_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ip_address, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManagementMsg.ip_address)
}

// map<string, string> addrs = 3;
inline int ManagementMsg::_internal_addrs_size() const {
  return addrs_.size();
}
inline int ManagementMsg::addrs_size() const {
  return _internal_addrs_size();
}
inline void ManagementMsg::clear_addrs() {
  addrs_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
ManagementMsg::_internal_addrs() const {
  return addrs_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
ManagementMsg::addrs() const {
  // @@protoc_insertion_point(field_map:ManagementMsg.addrs)
  return _internal_addrs();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
ManagementMsg::_internal_mutable_addrs() {
  return addrs_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
ManagementMsg::mutable_addrs() {
  // @@protoc_insertion_point(field_mutable_map:ManagementMsg.addrs)
  return _internal_mutable_addrs();
}

// int32 msg_type = 4;
inline void ManagementMsg::clear_msg_type() {
  msg_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ManagementMsg::_internal_msg_type() const {
  return msg_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ManagementMsg::msg_type() const {
  // @@protoc_insertion_point(field_get:ManagementMsg.msg_type)
  return _internal_msg_type();
}
inline void ManagementMsg::_internal_set_msg_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  msg_type_ = value;
}
inline void ManagementMsg::set_msg_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_msg_type(value);
  // @@protoc_insertion_point(field_set:ManagementMsg.msg_type)
}

// bool stop = 5;
inline void ManagementMsg::clear_stop() {
  stop_ = false;
}
inline bool ManagementMsg::_internal_stop() const {
  return stop_;
}
inline bool ManagementMsg::stop() const {
  // @@protoc_insertion_point(field_get:ManagementMsg.stop)
  return _internal_stop();
}
inline void ManagementMsg::_internal_set_stop(bool value) {
  
  stop_ = value;
}
inline void ManagementMsg::set_stop(bool value) {
  _internal_set_stop(value);
  // @@protoc_insertion_point(field_set:ManagementMsg.stop)
}

// repeated string request = 6;
inline int ManagementMsg::_internal_request_size() const {
  return request_.size();
}
inline int ManagementMsg::request_size() const {
  return _internal_request_size();
}
inline void ManagementMsg::clear_request() {
  request_.Clear();
}
inline std::string* ManagementMsg::add_request() {
  // @@protoc_insertion_point(field_add_mutable:ManagementMsg.request)
  return _internal_add_request();
}
inline const std::string& ManagementMsg::_internal_request(int index) const {
  return request_.Get(index);
}
inline const std::string& ManagementMsg::request(int index) const {
  // @@protoc_insertion_point(field_get:ManagementMsg.request)
  return _internal_request(index);
}
inline std::string* ManagementMsg::mutable_request(int index) {
  // @@protoc_insertion_point(field_mutable:ManagementMsg.request)
  return request_.Mutable(index);
}
inline void ManagementMsg::set_request(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:ManagementMsg.request)
  request_.Mutable(index)->assign(value);
}
inline void ManagementMsg::set_request(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:ManagementMsg.request)
  request_.Mutable(index)->assign(std::move(value));
}
inline void ManagementMsg::set_request(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  request_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ManagementMsg.request)
}
inline void ManagementMsg::set_request(int index, const char* value, size_t size) {
  request_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ManagementMsg.request)
}
inline std::string* ManagementMsg::_internal_add_request() {
  return request_.Add();
}
inline void ManagementMsg::add_request(const std::string& value) {
  request_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ManagementMsg.request)
}
inline void ManagementMsg::add_request(std::string&& value) {
  request_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ManagementMsg.request)
}
inline void ManagementMsg::add_request(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  request_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ManagementMsg.request)
}
inline void ManagementMsg::add_request(const char* value, size_t size) {
  request_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ManagementMsg.request)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ManagementMsg::request() const {
  // @@protoc_insertion_point(field_list:ManagementMsg.request)
  return request_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ManagementMsg::mutable_request() {
  // @@protoc_insertion_point(field_mutable_list:ManagementMsg.request)
  return &request_;
}

// string data = 7;
inline void ManagementMsg::clear_data() {
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ManagementMsg::data() const {
  // @@protoc_insertion_point(field_get:ManagementMsg.data)
  return _internal_data();
}
inline void ManagementMsg::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:ManagementMsg.data)
}
inline std::string* ManagementMsg::mutable_data() {
  // @@protoc_insertion_point(field_mutable:ManagementMsg.data)
  return _internal_mutable_data();
}
inline const std::string& ManagementMsg::_internal_data() const {
  return data_.Get();
}
inline void ManagementMsg::_internal_set_data(const std::string& value) {
  
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ManagementMsg::set_data(std::string&& value) {
  
  data_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ManagementMsg.data)
}
inline void ManagementMsg::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ManagementMsg.data)
}
inline void ManagementMsg::set_data(const char* value,
    size_t size) {
  
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ManagementMsg.data)
}
inline std::string* ManagementMsg::_internal_mutable_data() {
  
  return data_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ManagementMsg::release_data() {
  // @@protoc_insertion_point(field_release:ManagementMsg.data)
  return data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ManagementMsg::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ManagementMsg.data)
}
inline std::string* ManagementMsg::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ManagementMsg.data)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return data_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ManagementMsg::unsafe_arena_set_allocated_data(
    std::string* data) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (data != nullptr) {
    
  } else {
    
  }
  data_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      data, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManagementMsg.data)
}

// .StartOrdersSubmission order_sub_req = 8;
inline bool ManagementMsg::_internal_has_order_sub_req() const {
  return this != internal_default_instance() && order_sub_req_ != nullptr;
}
inline bool ManagementMsg::has_order_sub_req() const {
  return _internal_has_order_sub_req();
}
inline void ManagementMsg::clear_order_sub_req() {
  if (GetArena() == nullptr && order_sub_req_ != nullptr) {
    delete order_sub_req_;
  }
  order_sub_req_ = nullptr;
}
inline const ::StartOrdersSubmission& ManagementMsg::_internal_order_sub_req() const {
  const ::StartOrdersSubmission* p = order_sub_req_;
  return p != nullptr ? *p : *reinterpret_cast<const ::StartOrdersSubmission*>(
      &::_StartOrdersSubmission_default_instance_);
}
inline const ::StartOrdersSubmission& ManagementMsg::order_sub_req() const {
  // @@protoc_insertion_point(field_get:ManagementMsg.order_sub_req)
  return _internal_order_sub_req();
}
inline void ManagementMsg::unsafe_arena_set_allocated_order_sub_req(
    ::StartOrdersSubmission* order_sub_req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(order_sub_req_);
  }
  order_sub_req_ = order_sub_req;
  if (order_sub_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManagementMsg.order_sub_req)
}
inline ::StartOrdersSubmission* ManagementMsg::release_order_sub_req() {
  auto temp = unsafe_arena_release_order_sub_req();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::StartOrdersSubmission* ManagementMsg::unsafe_arena_release_order_sub_req() {
  // @@protoc_insertion_point(field_release:ManagementMsg.order_sub_req)
  
  ::StartOrdersSubmission* temp = order_sub_req_;
  order_sub_req_ = nullptr;
  return temp;
}
inline ::StartOrdersSubmission* ManagementMsg::_internal_mutable_order_sub_req() {
  
  if (order_sub_req_ == nullptr) {
    auto* p = CreateMaybeMessage<::StartOrdersSubmission>(GetArena());
    order_sub_req_ = p;
  }
  return order_sub_req_;
}
inline ::StartOrdersSubmission* ManagementMsg::mutable_order_sub_req() {
  // @@protoc_insertion_point(field_mutable:ManagementMsg.order_sub_req)
  return _internal_mutable_order_sub_req();
}
inline void ManagementMsg::set_allocated_order_sub_req(::StartOrdersSubmission* order_sub_req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete order_sub_req_;
  }
  if (order_sub_req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(order_sub_req);
    if (message_arena != submessage_arena) {
      order_sub_req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, order_sub_req, submessage_arena);
    }
    
  } else {
    
  }
  order_sub_req_ = order_sub_req;
  // @@protoc_insertion_point(field_set_allocated:ManagementMsg.order_sub_req)
}

// -------------------------------------------------------------------

// HedgingHint

// int32 proxy_num = 1;
inline void HedgingHint::clear_proxy_num() {
  proxy_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HedgingHint::_internal_proxy_num() const {
  return proxy_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HedgingHint::proxy_num() const {
  // @@protoc_insertion_point(field_get:HedgingHint.proxy_num)
  return _internal_proxy_num();
}
inline void HedgingHint::_internal_set_proxy_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  proxy_num_ = value;
}
inline void HedgingHint::set_proxy_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_proxy_num(value);
  // @@protoc_insertion_point(field_set:HedgingHint.proxy_num)
}

// float intensity = 2;
inline void HedgingHint::clear_intensity() {
  intensity_ = 0;
}
inline float HedgingHint::_internal_intensity() const {
  return intensity_;
}
inline float HedgingHint::intensity() const {
  // @@protoc_insertion_point(field_get:HedgingHint.intensity)
  return _internal_intensity();
}
inline void HedgingHint::_internal_set_intensity(float value) {
  
  intensity_ = value;
}
inline void HedgingHint::set_intensity(float value) {
  _internal_set_intensity(value);
  // @@protoc_insertion_point(field_set:HedgingHint.intensity)
}

// -------------------------------------------------------------------

// HoldreleaseHint

// int32 index = 1;
inline void HoldreleaseHint::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HoldreleaseHint::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HoldreleaseHint::index() const {
  // @@protoc_insertion_point(field_get:HoldreleaseHint.index)
  return _internal_index();
}
inline void HoldreleaseHint::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void HoldreleaseHint::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:HoldreleaseHint.index)
}

// repeated int32 owd_estimates = 2;
inline int HoldreleaseHint::_internal_owd_estimates_size() const {
  return owd_estimates_.size();
}
inline int HoldreleaseHint::owd_estimates_size() const {
  return _internal_owd_estimates_size();
}
inline void HoldreleaseHint::clear_owd_estimates() {
  owd_estimates_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HoldreleaseHint::_internal_owd_estimates(int index) const {
  return owd_estimates_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HoldreleaseHint::owd_estimates(int index) const {
  // @@protoc_insertion_point(field_get:HoldreleaseHint.owd_estimates)
  return _internal_owd_estimates(index);
}
inline void HoldreleaseHint::set_owd_estimates(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  owd_estimates_.Set(index, value);
  // @@protoc_insertion_point(field_set:HoldreleaseHint.owd_estimates)
}
inline void HoldreleaseHint::_internal_add_owd_estimates(::PROTOBUF_NAMESPACE_ID::int32 value) {
  owd_estimates_.Add(value);
}
inline void HoldreleaseHint::add_owd_estimates(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_owd_estimates(value);
  // @@protoc_insertion_point(field_add:HoldreleaseHint.owd_estimates)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
HoldreleaseHint::_internal_owd_estimates() const {
  return owd_estimates_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
HoldreleaseHint::owd_estimates() const {
  // @@protoc_insertion_point(field_list:HoldreleaseHint.owd_estimates)
  return _internal_owd_estimates();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
HoldreleaseHint::_internal_mutable_owd_estimates() {
  return &owd_estimates_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
HoldreleaseHint::mutable_owd_estimates() {
  // @@protoc_insertion_point(field_mutable_list:HoldreleaseHint.owd_estimates)
  return _internal_mutable_owd_estimates();
}

// -------------------------------------------------------------------

// StartOrdersSubmission

// uint64 request_id = 1;
inline void StartOrdersSubmission::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StartOrdersSubmission::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StartOrdersSubmission::request_id() const {
  // @@protoc_insertion_point(field_get:StartOrdersSubmission.request_id)
  return _internal_request_id();
}
inline void StartOrdersSubmission::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void StartOrdersSubmission::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:StartOrdersSubmission.request_id)
}

// int32 rate = 2;
inline void StartOrdersSubmission::clear_rate() {
  rate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::_internal_rate() const {
  return rate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::rate() const {
  // @@protoc_insertion_point(field_get:StartOrdersSubmission.rate)
  return _internal_rate();
}
inline void StartOrdersSubmission::_internal_set_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rate_ = value;
}
inline void StartOrdersSubmission::set_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rate(value);
  // @@protoc_insertion_point(field_set:StartOrdersSubmission.rate)
}

// int32 experiment_duration = 3;
inline void StartOrdersSubmission::clear_experiment_duration() {
  experiment_duration_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::_internal_experiment_duration() const {
  return experiment_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::experiment_duration() const {
  // @@protoc_insertion_point(field_get:StartOrdersSubmission.experiment_duration)
  return _internal_experiment_duration();
}
inline void StartOrdersSubmission::_internal_set_experiment_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  experiment_duration_ = value;
}
inline void StartOrdersSubmission::set_experiment_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_experiment_duration(value);
  // @@protoc_insertion_point(field_set:StartOrdersSubmission.experiment_duration)
}

// uint64 start_timestamp = 4;
inline void StartOrdersSubmission::clear_start_timestamp() {
  start_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StartOrdersSubmission::_internal_start_timestamp() const {
  return start_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StartOrdersSubmission::start_timestamp() const {
  // @@protoc_insertion_point(field_get:StartOrdersSubmission.start_timestamp)
  return _internal_start_timestamp();
}
inline void StartOrdersSubmission::_internal_set_start_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  start_timestamp_ = value;
}
inline void StartOrdersSubmission::set_start_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_start_timestamp(value);
  // @@protoc_insertion_point(field_set:StartOrdersSubmission.start_timestamp)
}

// int32 bid_range_start = 5;
inline void StartOrdersSubmission::clear_bid_range_start() {
  bid_range_start_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::_internal_bid_range_start() const {
  return bid_range_start_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::bid_range_start() const {
  // @@protoc_insertion_point(field_get:StartOrdersSubmission.bid_range_start)
  return _internal_bid_range_start();
}
inline void StartOrdersSubmission::_internal_set_bid_range_start(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bid_range_start_ = value;
}
inline void StartOrdersSubmission::set_bid_range_start(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bid_range_start(value);
  // @@protoc_insertion_point(field_set:StartOrdersSubmission.bid_range_start)
}

// int32 bid_range_end = 6;
inline void StartOrdersSubmission::clear_bid_range_end() {
  bid_range_end_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::_internal_bid_range_end() const {
  return bid_range_end_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::bid_range_end() const {
  // @@protoc_insertion_point(field_get:StartOrdersSubmission.bid_range_end)
  return _internal_bid_range_end();
}
inline void StartOrdersSubmission::_internal_set_bid_range_end(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bid_range_end_ = value;
}
inline void StartOrdersSubmission::set_bid_range_end(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bid_range_end(value);
  // @@protoc_insertion_point(field_set:StartOrdersSubmission.bid_range_end)
}

// int32 ask_range_start = 7;
inline void StartOrdersSubmission::clear_ask_range_start() {
  ask_range_start_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::_internal_ask_range_start() const {
  return ask_range_start_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::ask_range_start() const {
  // @@protoc_insertion_point(field_get:StartOrdersSubmission.ask_range_start)
  return _internal_ask_range_start();
}
inline void StartOrdersSubmission::_internal_set_ask_range_start(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ask_range_start_ = value;
}
inline void StartOrdersSubmission::set_ask_range_start(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ask_range_start(value);
  // @@protoc_insertion_point(field_set:StartOrdersSubmission.ask_range_start)
}

// int32 ask_range_end = 8;
inline void StartOrdersSubmission::clear_ask_range_end() {
  ask_range_end_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::_internal_ask_range_end() const {
  return ask_range_end_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::ask_range_end() const {
  // @@protoc_insertion_point(field_get:StartOrdersSubmission.ask_range_end)
  return _internal_ask_range_end();
}
inline void StartOrdersSubmission::_internal_set_ask_range_end(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ask_range_end_ = value;
}
inline void StartOrdersSubmission::set_ask_range_end(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ask_range_end(value);
  // @@protoc_insertion_point(field_set:StartOrdersSubmission.ask_range_end)
}

// int32 fixed_interarrival = 9;
inline void StartOrdersSubmission::clear_fixed_interarrival() {
  fixed_interarrival_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::_internal_fixed_interarrival() const {
  return fixed_interarrival_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StartOrdersSubmission::fixed_interarrival() const {
  // @@protoc_insertion_point(field_get:StartOrdersSubmission.fixed_interarrival)
  return _internal_fixed_interarrival();
}
inline void StartOrdersSubmission::_internal_set_fixed_interarrival(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  fixed_interarrival_ = value;
}
inline void StartOrdersSubmission::set_fixed_interarrival(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_fixed_interarrival(value);
  // @@protoc_insertion_point(field_set:StartOrdersSubmission.fixed_interarrival)
}

// bool use_fancypq = 10;
inline void StartOrdersSubmission::clear_use_fancypq() {
  use_fancypq_ = false;
}
inline bool StartOrdersSubmission::_internal_use_fancypq() const {
  return use_fancypq_;
}
inline bool StartOrdersSubmission::use_fancypq() const {
  // @@protoc_insertion_point(field_get:StartOrdersSubmission.use_fancypq)
  return _internal_use_fancypq();
}
inline void StartOrdersSubmission::_internal_set_use_fancypq(bool value) {
  
  use_fancypq_ = value;
}
inline void StartOrdersSubmission::set_use_fancypq(bool value) {
  _internal_set_use_fancypq(value);
  // @@protoc_insertion_point(field_set:StartOrdersSubmission.use_fancypq)
}

// -------------------------------------------------------------------

// ManagementToDataplane

// .StartOrdersSubmission order_sub_req = 1;
inline bool ManagementToDataplane::_internal_has_order_sub_req() const {
  return this != internal_default_instance() && order_sub_req_ != nullptr;
}
inline bool ManagementToDataplane::has_order_sub_req() const {
  return _internal_has_order_sub_req();
}
inline void ManagementToDataplane::clear_order_sub_req() {
  if (GetArena() == nullptr && order_sub_req_ != nullptr) {
    delete order_sub_req_;
  }
  order_sub_req_ = nullptr;
}
inline const ::StartOrdersSubmission& ManagementToDataplane::_internal_order_sub_req() const {
  const ::StartOrdersSubmission* p = order_sub_req_;
  return p != nullptr ? *p : *reinterpret_cast<const ::StartOrdersSubmission*>(
      &::_StartOrdersSubmission_default_instance_);
}
inline const ::StartOrdersSubmission& ManagementToDataplane::order_sub_req() const {
  // @@protoc_insertion_point(field_get:ManagementToDataplane.order_sub_req)
  return _internal_order_sub_req();
}
inline void ManagementToDataplane::unsafe_arena_set_allocated_order_sub_req(
    ::StartOrdersSubmission* order_sub_req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(order_sub_req_);
  }
  order_sub_req_ = order_sub_req;
  if (order_sub_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ManagementToDataplane.order_sub_req)
}
inline ::StartOrdersSubmission* ManagementToDataplane::release_order_sub_req() {
  auto temp = unsafe_arena_release_order_sub_req();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::StartOrdersSubmission* ManagementToDataplane::unsafe_arena_release_order_sub_req() {
  // @@protoc_insertion_point(field_release:ManagementToDataplane.order_sub_req)
  
  ::StartOrdersSubmission* temp = order_sub_req_;
  order_sub_req_ = nullptr;
  return temp;
}
inline ::StartOrdersSubmission* ManagementToDataplane::_internal_mutable_order_sub_req() {
  
  if (order_sub_req_ == nullptr) {
    auto* p = CreateMaybeMessage<::StartOrdersSubmission>(GetArena());
    order_sub_req_ = p;
  }
  return order_sub_req_;
}
inline ::StartOrdersSubmission* ManagementToDataplane::mutable_order_sub_req() {
  // @@protoc_insertion_point(field_mutable:ManagementToDataplane.order_sub_req)
  return _internal_mutable_order_sub_req();
}
inline void ManagementToDataplane::set_allocated_order_sub_req(::StartOrdersSubmission* order_sub_req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete order_sub_req_;
  }
  if (order_sub_req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(order_sub_req);
    if (message_arena != submessage_arena) {
      order_sub_req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, order_sub_req, submessage_arena);
    }
    
  } else {
    
  }
  order_sub_req_ = order_sub_req;
  // @@protoc_insertion_point(field_set_allocated:ManagementToDataplane.order_sub_req)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::MessageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MessageType>() {
  return ::MessageType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_message_2eproto
